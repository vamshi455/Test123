CREATE OR REPLACE FUNCTION YOUR_SCHEMA.INTERPOLATE_PVT_COMPLETION_TEST(PRESSURE FLOAT, COMPLETION VARCHAR, VRR_DATE DATE)
RETURNS TABLE (
    PRESSURE FLOAT,
    OIL_FORMATION_VOLUME_FACTOR FLOAT,
    GAS_FORMATION_VOLUME_FACTOR FLOAT,
    WATER_FORMATION_VOLUME_FACTOR FLOAT,
    SOLUTION_GAS_OIL_RATIO FLOAT,
    VOLATIZED_OIL_GAS_RATIO FLOAT,
    VISCOSITY_OIL FLOAT,
    VISCOSITY_WATER FLOAT,
    VISCOSITY_GAS FLOAT,
    INJECTED_GAS_FORMATION_VOLUME_FACTOR FLOAT,
    INJECTED_WATER_FORMATION_VOLUME_FACTOR FLOAT
)
AS $$
WITH 
-- Step 1: Retrieve PVT data with an end date (equivalent to @PVTwithEndDate)
PVT_WITH_END_DATE AS (
    SELECT 
        ID_COMPLETION,
        TEST_DATE,
        PRESSURE,
        OIL_FORMATION_VOLUME_FACTOR,
        GAS_FORMATION_VOLUME_FACTOR,
        WATER_FORMATION_VOLUME_FACTOR,
        SOLUTION_GAS_OIL_RATIO,
        VOLATIZED_OIL_GAS_RATIO,
        VISCOSITY_OIL,
        VISCOSITY_WATER,
        VISCOSITY_GAS,
        INJECTED_GAS_FORMATION_VOLUME_FACTOR,
        INJECTED_WATER_FORMATION_VOLUME_FACTOR,
        COALESCE(
            (SELECT MIN(TEST_DATE)
             FROM YOUR_SCHEMA.COMPLETION_PVT_CHARACTERISTICS cpvt
             WHERE cpvt.TEST_DATE > c.TEST_DATE
               AND cpvt.ID_COMPLETION = c.ID_COMPLETION),
            '9999-12-31'::DATE
        ) AS END_DATE
    FROM YOUR_SCHEMA.COMPLETION_PVT_CHARACTERISTICS c
    WHERE ID_COMPLETION = COMPLETION
      AND TEST_DATE <= EOMONTH(VRR_DATE)
      AND TEST_DATE >= PRESSURE
    ORDER BY TEST_DATE DESC
),
-- Step 2: Find an exact match for the given pressure (equivalent to @ExactMatch)
EXACT_MATCH AS (
    SELECT 
        PRESSURE AS EXACT_PRESSURE,
        OIL_FORMATION_VOLUME_FACTOR AS EXACT_OIL_FORMATION_VOLUME_FACTOR,
        GAS_FORMATION_VOLUME_FACTOR AS EXACT_GAS_FORMATION_VOLUME_FACTOR,
        WATER_FORMATION_VOLUME_FACTOR AS EXACT_WATER_FORMATION_VOLUME_FACTOR,
        SOLUTION_GAS_OIL_RATIO AS EXACT_SOLUTION_GAS_OIL_RATIO,
        VOLATIZED_OIL_GAS_RATIO AS EXACT_VOLATIZED_OIL_GAS_RATIO,
        VISCOSITY_OIL AS EXACT_VISCOSITY_OIL,
        VISCOSITY_WATER AS EXACT_VISCOSITY_WATER,
        VISCOSITY_GAS AS EXACT_VISCOSITY_GAS,
        INJECTED_GAS_FORMATION_VOLUME_FACTOR AS EXACT_INJECTED_GAS_FORMATION_VOLUME_FACTOR,
        INJECTED_WATER_FORMATION_VOLUME_FACTOR AS EXACT_INJECTED_WATER_FORMATION_VOLUME_FACTOR
    FROM PVT_WITH_END_DATE
    WHERE TEST_DATE = (
        SELECT MAX(TEST_DATE)
        FROM PVT_WITH_END_DATE p
        WHERE p.PRESSURE = PRESSURE
          AND p.ID_COMPLETION = COMPLETION
          AND p.TEST_DATE <= EOMONTH(VRR_DATE)
    )
      AND PRESSURE = PRESSURE
    LIMIT 1
),
-- Step 3: Find the lower bound (pressure < given pressure, closest to it)
LOWER_BOUND AS (
    SELECT 
        PRESSURE AS LOWER_PRESSURE,
        OIL_FORMATION_VOLUME_FACTOR AS LOWER_OIL_FORMATION_VOLUME_FACTOR,
        GAS_FORMATION_VOLUME_FACTOR AS LOWER_GAS_FORMATION_VOLUME_FACTOR,
        WATER_FORMATION_VOLUME_FACTOR AS LOWER_WATER_FORMATION_VOLUME_FACTOR,
        SOLUTION_GAS_OIL_RATIO AS LOWER_SOLUTION_GAS_OIL_RATIO,
        VOLATIZED_OIL_GAS_RATIO AS LOWER_VOLATIZED_OIL_GAS_RATIO,
        VISCOSITY_OIL AS LOWER_VISCOSITY_OIL,
        VISCOSITY_WATER AS LOWER_VISCOSITY_WATER,
        VISCOSITY_GAS AS LOWER_VISCOSITY_GAS,
        INJECTED_GAS_FORMATION_VOLUME_FACTOR AS LOWER_INJECTED_GAS_FORMATION_VOLUME_FACTOR,
        INJECTED_WATER_FORMATION_VOLUME_FACTOR AS LOWER_INJECTED_WATER_FORMATION_VOLUME_FACTOR
    FROM PVT_WITH_END_DATE
    WHERE PRESSURE < PRESSURE
      AND ID_COMPLETION = COMPLETION
      AND TEST_DATE <= EOMONTH(VRR_DATE)
    ORDER BY PRESSURE DESC, TEST_DATE DESC
    LIMIT 1
),
-- Step 4: Find the upper bound (pressure > given pressure, closest to it)
UPPER_BOUND AS (
    SELECT 
        PRESSURE AS UPPER_PRESSURE,
        OIL_FORMATION_VOLUME_FACTOR AS UPPER_OIL_FORMATION_VOLUME_FACTOR,
        GAS_FORMATION_VOLUME_FACTOR AS UPPER_GAS_FORMATION_VOLUME_FACTOR,
        WATER_FORMATION_VOLUME_FACTOR AS UPPER_WATER_FORMATION_VOLUME_FACTOR,
        SOLUTION_GAS_OIL_RATIO AS UPPER_SOLUTION_GAS_OIL_RATIO,
        VOLATIZED_OIL_GAS_RATIO AS UPPER_VOLATIZED_OIL_GAS_RATIO,
        VISCOSITY_OIL AS UPPER_VISCOSITY_OIL,
        VISCOSITY_WATER AS UPPER_VISCOSITY_WATER,
        VISCOSITY_GAS AS UPPER_VISCOSITY_GAS,
        INJECTED_GAS_FORMATION_VOLUME_FACTOR AS UPPER_INJECTED_GAS_FORMATION_VOLUME_FACTOR,
        INJECTED_WATER_FORMATION_VOLUME_FACTOR AS UPPER_INJECTED_WATER_FORMATION_VOLUME_FACTOR
    FROM PVT_WITH_END_DATE
    WHERE PRESSURE > PRESSURE
      AND ID_COMPLETION = COMPLETION
      AND TEST_DATE <= EOMONTH(VRR_DATE)
    ORDER BY PRESSURE ASC, TEST_DATE DESC
    LIMIT 1
),
-- Step 5: Find the second bound if upper bound exists but no lower bound
SECOND_BOUND AS (
    SELECT 
        PRESSURE AS SECOND_PRESSURE,
        OIL_FORMATION_VOLUME_FACTOR AS SECOND_OIL_FORMATION_VOLUME_FACTOR,
        GAS_FORMATION_VOLUME_FACTOR AS SECOND_GAS_FORMATION_VOLUME_FACTOR,
        WATER_FORMATION_VOLUME_FACTOR AS SECOND_WATER_FORMATION_VOLUME_FACTOR,
        SOLUTION_GAS_OIL_RATIO AS SECOND_SOLUTION_GAS_OIL_RATIO,
        VOLATIZED_OIL_GAS_RATIO AS SECOND_VOLATIZED_OIL_GAS_RATIO,
        VISCOSITY_OIL AS SECOND_VISCOSITY_OIL,
        VISCOSITY_WATER AS SECOND_VISCOSITY_WATER,
        VISCOSITY_GAS AS SECOND_VISCOSITY_GAS,
        INJECTED_GAS_FORMATION_VOLUME_FACTOR AS SECOND_INJECTED_GAS_FORMATION_VOLUME_FACTOR,
        INJECTED_WATER_FORMATION_VOLUME_FACTOR AS SECOND_INJECTED_WATER_FORMATION_VOLUME_FACTOR
    FROM PVT_WITH_END_DATE
    WHERE PRESSURE > (SELECT UPPER_PRESSURE FROM UPPER_BOUND)
      AND ID_COMPLETION = COMPLETION
      AND TEST_DATE <= EOMONTH(VRR_DATE)
    ORDER BY PRESSURE ASC, TEST_DATE DESC
    LIMIT 1
),
-- Step 6: Combine all bounds into a single row for easier access in the CASE statement
BOUND_VALUES AS (
    SELECT 
        (SELECT EXACT_PRESSURE FROM EXACT_MATCH) AS EXACT_PRESSURE,
        (SELECT EXACT_OIL_FORMATION_VOLUME_FACTOR FROM EXACT_MATCH) AS EXACT_OIL_FORMATION_VOLUME_FACTOR,
        (SELECT EXACT_GAS_FORMATION_VOLUME_FACTOR FROM EXACT_MATCH) AS EXACT_GAS_FORMATION_VOLUME_FACTOR,
        (SELECT EXACT_WATER_FORMATION_VOLUME_FACTOR FROM EXACT_MATCH) AS EXACT_WATER_FORMATION_VOLUME_FACTOR,
        (SELECT EXACT_SOLUTION_GAS_OIL_RATIO FROM EXACT_MATCH) AS EXACT_SOLUTION_GAS_OIL_RATIO,
        (SELECT EXACT_VOLATIZED_OIL_GAS_RATIO FROM EXACT_MATCH) AS EXACT_VOLATIZED_OIL_GAS_RATIO,
        (SELECT EXACT_VISCOSITY_OIL FROM EXACT_MATCH) AS EXACT_VISCOSITY_OIL,
        (SELECT EXACT_VISCOSITY_WATER FROM EXACT_MATCH) AS EXACT_VISCOSITY_WATER,
        (SELECT EXACT_VISCOSITY_GAS FROM EXACT_MATCH) AS EXACT_VISCOSITY_GAS,
        (SELECT EXACT_INJECTED_GAS_FORMATION_VOLUME_FACTOR FROM EXACT_MATCH) AS EXACT_INJECTED_GAS_FORMATION_VOLUME_FACTOR,
        (SELECT EXACT_INJECTED_WATER_FORMATION_VOLUME_FACTOR FROM EXACT_MATCH) AS EXACT_INJECTED_WATER_FORMATION_VOLUME_FACTOR,
        (SELECT LOWER_PRESSURE FROM LOWER_BOUND) AS LOWER_PRESSURE,
        (SELECT LOWER_OIL_FORMATION_VOLUME_FACTOR FROM LOWER_BOUND) AS LOWER_OIL_FORMATION_VOLUME_FACTOR,
        (SELECT LOWER_GAS_FORMATION_VOLUME_FACTOR FROM LOWER_BOUND) AS LOWER_GAS_FORMATION_VOLUME_FACTOR,
        (SELECT LOWER_WATER_FORMATION_VOLUME_FACTOR FROM LOWER_BOUND) AS LOWER_WATER_FORMATION_VOLUME_FACTOR,
        (SELECT LOWER_SOLUTION_GAS_OIL_RATIO FROM LOWER_BOUND) AS LOWER_SOLUTION_GAS_OIL_RATIO,
        (SELECT LOWER_VOLATIZED_OIL_GAS_RATIO FROM LOWER_BOUND) AS LOWER_VOLATIZED_OIL_GAS_RATIO,
        (SELECT LOWER_VISCOSITY_OIL FROM LOWER_BOUND) AS LOWER_VISCOSITY_OIL,
        (SELECT LOWER_VISCOSITY_WATER FROM LOWER_BOUND) AS LOWER_VISCOSITY_WATER,
        (SELECT LOWER_VISCOSITY_GAS FROM LOWER_BOUND) AS LOWER_VISCOSITY_GAS,
        (SELECT LOWER_INJECTED_GAS_FORMATION_VOLUME_FACTOR FROM LOWER_BOUND) AS LOWER_INJECTED_GAS_FORMATION_VOLUME_FACTOR,
        (SELECT LOWER_INJECTED_WATER_FORMATION_VOLUME_FACTOR FROM LOWER_BOUND) AS LOWER_INJECTED_WATER_FORMATION_VOLUME_FACTOR,
        (SELECT UPPER_PRESSURE FROM UPPER_BOUND) AS UPPER_PRESSURE,
        (SELECT UPPER_OIL_FORMATION_VOLUME_FACTOR FROM UPPER_BOUND) AS UPPER_OIL_FORMATION_VOLUME_FACTOR,
        (SELECT UPPER_GAS_FORMATION_VOLUME_FACTOR FROM UPPER_BOUND) AS UPPER_GAS_FORMATION_VOLUME_FACTOR,
        (SELECT UPPER_WATER_FORMATION_VOLUME_FACTOR FROM UPPER_BOUND) AS UPPER_WATER_FORMATION_VOLUME_FACTOR,
        (SELECT UPPER_SOLUTION_GAS_OIL_RATIO FROM UPPER_BOUND) AS UPPER_SOLUTION_GAS_OIL_RATIO,
        (SELECT UPPER_VOLATIZED_OIL_GAS_RATIO FROM UPPER_BOUND) AS UPPER_VOLATIZED_OIL_GAS_RATIO,
        (SELECT UPPER_VISCOSITY_OIL FROM UPPER_BOUND) AS UPPER_VISCOSITY_OIL,
        (SELECT UPPER_VISCOSITY_WATER FROM UPPER_BOUND) AS UPPER_VISCOSITY_WATER,
        (SELECT UPPER_VISCOSITY_GAS FROM UPPER_BOUND) AS UPPER_VISCOSITY_GAS,
        (SELECT UPPER_INJECTED_GAS_FORMATION_VOLUME_FACTOR FROM UPPER_BOUND) AS UPPER_INJECTED_GAS_FORMATION_VOLUME_FACTOR,
        (SELECT UPPER_INJECTED_WATER_FORMATION_VOLUME_FACTOR FROM UPPER_BOUND) AS UPPER_INJECTED_WATER_FORMATION_VOLUME_FACTOR,
        (SELECT SECOND_PRESSURE FROM SECOND_BOUND) AS SECOND_PRESSURE,
        (SELECT SECOND_OIL_FORMATION_VOLUME_FACTOR FROM SECOND_BOUND) AS SECOND_OIL_FORMATION_VOLUME_FACTOR,
        (SELECT SECOND_GAS_FORMATION_VOLUME_FACTOR FROM SECOND_BOUND) AS SECOND_GAS_FORMATION_VOLUME_FACTOR,
        (SELECT SECOND_WATER_FORMATION_VOLUME_FACTOR FROM SECOND_BOUND) AS SECOND_WATER_FORMATION_VOLUME_FACTOR,
        (SELECT SECOND_SOLUTION_GAS_OIL_RATIO FROM SECOND_BOUND) AS SECOND_SOLUTION_GAS_OIL_RATIO,
        (SELECT SECOND_VOLATIZED_OIL_GAS_RATIO FROM SECOND_BOUND) AS SECOND_VOLATIZED_OIL_GAS_RATIO,
        (SELECT SECOND_VISCOSITY_OIL FROM SECOND_BOUND) AS SECOND_VISCOSITY_OIL,
        (SELECT SECOND_VISCOSITY_WATER FROM SECOND_BOUND) AS SECOND_VISCOSITY_WATER,
        (SELECT SECOND_VISCOSITY_GAS FROM SECOND_BOUND) AS SECOND_VISCOSITY_GAS,
        (SELECT SECOND_INJECTED_GAS_FORMATION_VOLUME_FACTOR FROM SECOND_BOUND) AS SECOND_INJECTED_GAS_FORMATION_VOLUME_FACTOR,
        (SELECT SECOND_INJECTED_WATER_FORMATION_VOLUME_FACTOR FROM SECOND_BOUND) AS SECOND_INJECTED_WATER_FORMATION_VOLUME_FACTOR
),
-- Step 7: Interpolate or extrapolate values
INTERPOLATED_VALUES AS (
    SELECT 
        PRESSURE AS TARGET_PRESSURE,
        -- OIL_FORMATION_VOLUME_FACTOR
        CASE 
            WHEN (SELECT COUNT(*) FROM EXACT_MATCH) = 1 THEN EXACT_OIL_FORMATION_VOLUME_FACTOR
            WHEN (SELECT COUNT(*) FROM LOWER_BOUND) = 1 AND (SELECT COUNT(*) FROM UPPER_BOUND) = 1 THEN 
                (LOWER_OIL_FORMATION_VOLUME_FACTOR + 
                 (UPPER_OIL_FORMATION_VOLUME_FACTOR - LOWER_OIL_FORMATION_VOLUME_FACTOR) * 
                 (PRESSURE - LOWER_PRESSURE) / (UPPER_PRESSURE - LOWER_PRESSURE))
            WHEN (SELECT COUNT(*) FROM UPPER_BOUND) = 1 AND (SELECT COUNT(*) FROM LOWER_BOUND) = 0 AND (SELECT COUNT(*) FROM SECOND_BOUND) = 1 THEN 
                (UPPER_OIL_FORMATION_VOLUME_FACTOR + 
                 (SECOND_OIL_FORMATION_VOLUME_FACTOR - UPPER_OIL_FORMATION_VOLUME_FACTOR) * 
                 (PRESSURE - UPPER_PRESSURE) / (SECOND_PRESSURE - UPPER_PRESSURE))
            ELSE NULL
        END AS OIL_FORMATION_VOLUME_FACTOR,
        -- GAS_FORMATION_VOLUME_FACTOR
        CASE 
            WHEN (SELECT COUNT(*) FROM EXACT_MATCH) = 1 THEN EXACT_GAS_FORMATION_VOLUME_FACTOR
            WHEN (SELECT COUNT(*) FROM LOWER_BOUND) = 1 AND (SELECT COUNT(*) FROM UPPER_BOUND) = 1 THEN 
                (LOWER_GAS_FORMATION_VOLUME_FACTOR + 
                 (UPPER_GAS_FORMATION_VOLUME_FACTOR - LOWER_GAS_FORMATION_VOLUME_FACTOR) * 
                 (PRESSURE - LOWER_PRESSURE) / (UPPER_PRESSURE - LOWER_PRESSURE))
            WHEN (SELECT COUNT(*) FROM UPPER_BOUND) = 1 AND (SELECT COUNT(*) FROM LOWER_BOUND) = 0 AND (SELECT COUNT(*) FROM SECOND_BOUND) = 1 THEN 
                (UPPER_GAS_FORMATION_VOLUME_FACTOR + 
                 (SECOND_GAS_FORMATION_VOLUME_FACTOR - UPPER_GAS_FORMATION_VOLUME_FACTOR) * 
                 (PRESSURE - UPPER_PRESSURE) / (SECOND_PRESSURE - UPPER_PRESSURE))
            ELSE NULL
        END AS GAS_FORMATION_VOLUME_FACTOR,
        -- WATER_FORMATION_VOLUME_FACTOR
        CASE 
            WHEN (SELECT COUNT(*) FROM EXACT_MATCH) = 1 THEN EXACT_WATER_FORMATION_VOLUME_FACTOR
            WHEN (SELECT COUNT(*) FROM LOWER_BOUND) = 1 AND (SELECT COUNT(*) FROM UPPER_BOUND) = 1 THEN 
                (LOWER_WATER_FORMATION_VOLUME_FACTOR + 
                 (UPPER_WATER_FORMATION_VOLUME_FACTOR - LOWER_WATER_FORMATION_VOLUME_FACTOR) * 
                 (PRESSURE - LOWER_PRESSURE) / (UPPER_PRESSURE - LOWER_PRESSURE))
            WHEN (SELECT COUNT(*) FROM UPPER_BOUND) = 1 AND (SELECT COUNT(*) FROM LOWER_BOUND) = 0 AND (SELECT COUNT(*) FROM SECOND_BOUND) = 1 THEN 
                (UPPER_WATER_FORMATION_VOLUME_FACTOR + 
                 (SECOND_WATER_FORMATION_VOLUME_FACTOR - UPPER_WATER_FORMATION_VOLUME_FACTOR) * 
                 (PRESSURE - UPPER_PRESSURE) / (SECOND_PRESSURE - UPPER_PRESSURE))
            ELSE NULL
        END AS WATER_FORMATION_VOLUME_FACTOR,
        -- SOLUTION_GAS_OIL_RATIO
        CASE 
            WHEN (SELECT COUNT(*) FROM EXACT_MATCH) = 1 THEN EXACT_SOLUTION_GAS_OIL_RATIO
            WHEN (SELECT COUNT(*) FROM LOWER_BOUND) = 1 AND (SELECT COUNT(*) FROM UPPER_BOUND) = 1 THEN 
                (LOWER_SOLUTION_GAS_OIL_RATIO + 
                 (UPPER_SOLUTION_GAS_OIL_RATIO - LOWER_SOLUTION_GAS_OIL_RATIO) * 
                 (PRESSURE - LOWER_PRESSURE) / (UPPER_PRESSURE - LOWER_PRESSURE))
            WHEN (SELECT COUNT(*) FROM UPPER_BOUND) = 1 AND (SELECT COUNT(*) FROM LOWER_BOUND) = 0 AND (SELECT COUNT(*) FROM SECOND_BOUND) = 1 THEN 
                (UPPER_SOLUTION_GAS_OIL_RATIO + 
                 (SECOND_SOLUTION_GAS_OIL_RATIO - UPPER_SOLUTION_GAS_OIL_RATIO) * 
                 (PRESSURE - UPPER_PRESSURE) / (SECOND_PRESSURE - UPPER_PRESSURE))
            ELSE NULL
        END AS SOLUTION_GAS_OIL_RATIO,
        -- VOLATIZED_OIL_GAS_RATIO
        CASE 
            WHEN (SELECT COUNT(*) FROM EXACT_MATCH) = 1 THEN EXACT_VOLATIZED_OIL_GAS_RATIO
            WHEN (SELECT COUNT(*) FROM LOWER_BOUND) = 1 AND (SELECT COUNT(*) FROM UPPER_BOUND) = 1 THEN 
                (LOWER_VOLATIZED_OIL_GAS_RATIO + 
                 (UPPER_VOLATIZED_OIL_GAS_RATIO - LOWER_VOLATIZED_OIL_GAS_RATIO) * 
                 (PRESSURE - LOWER_PRESSURE) / (UPPER_PRESSURE - LOWER_PRESSURE))
            WHEN (SELECT COUNT(*) FROM UPPER_BOUND) = 1 AND (SELECT COUNT(*) FROM LOWER_BOUND) = 0 AND (SELECT COUNT(*) FROM SECOND_BOUND) = 1 THEN 
                (UPPER_VOLATIZED_OIL_GAS_RATIO + 
                 (SECOND_VOLATIZED_OIL_GAS_RATIO - UPPER_VOLATIZED_OIL_GAS_RATIO) * 
                 (PRESSURE - UPPER_PRESSURE) / (SECOND_PRESSURE - UPPER_PRESSURE))
            ELSE NULL
        END AS VOLATIZED_OIL_GAS_RATIO,
        -- VISCOSITY_OIL
        CASE 
            WHEN (SELECT COUNT(*) FROM EXACT_MATCH) = 1 THEN EXACT_VISCOSITY_OIL
            WHEN (SELECT COUNT(*) FROM LOWER_BOUND) = 1 AND (SELECT COUNT(*) FROM UPPER_BOUND) = 1 THEN 
                (LOWER_VISCOSITY_OIL + 
                 (UPPER_VISCOSITY_OIL - LOWER_VISCOSITY_OIL) * 
                 (PRESSURE - LOWER_PRESSURE) / (UPPER_PRESSURE - LOWER_PRESSURE))
            WHEN (SELECT COUNT(*) FROM UPPER_BOUND) = 1 AND (SELECT COUNT(*) FROM LOWER_BOUND) = 0 AND (SELECT COUNT(*) FROM SECOND_BOUND) = 1 THEN 
                (UPPER_VISCOSITY_OIL + 
                 (SECOND_VISCOSITY_OIL - UPPER_VISCOSITY_OIL) * 
                 (PRESSURE - UPPER_PRESSURE) / (SECOND_PRESSURE - UPPER_PRESSURE))
            ELSE NULL
        END AS VISCOSITY_OIL,
        -- VISCOSITY_WATER
        CASE 
            WHEN (SELECT COUNT(*) FROM EXACT_MATCH) = 1 THEN EXACT_VISCOSITY_WATER
            WHEN (SELECT COUNT(*) FROM LOWER_BOUND) = 1 AND (SELECT COUNT(*) FROM UPPER_BOUND) = 1 THEN 
                (LOWER_VISCOSITY_WATER + 
                 (UPPER_VISCOSITY_WATER - LOWER_VISCOSITY_WATER) * 
                 (PRESSURE - LOWER_PRESSURE) / (UPPER_PRESSURE - LOWER_PRESSURE))
            WHEN (SELECT COUNT(*) FROM UPPER_BOUND) = 1 AND (SELECT COUNT(*) FROM LOWER_BOUND) = 0 AND (SELECT COUNT(*) FROM SECOND_BOUND) = 1 THEN 
                (UPPER_VISCOSITY_WATER + 
                 (SECOND_VISCOSITY_WATER - UPPER_VISCOSITY_WATER) * 
                 (PRESSURE - UPPER_PRESSURE) / (SECOND_PRESSURE - UPPER_PRESSURE))
            ELSE NULL
        END AS VISCOSITY_WATER,
        -- VISCOSITY_GAS
        CASE 
            WHEN (SELECT COUNT(*) FROM EXACT_MATCH) = 1 THEN EXACT_VISCOSITY_GAS
            WHEN (SELECT COUNT(*) FROM LOWER_BOUND) = 1 AND (SELECT COUNT(*) FROM UPPER_BOUND) = 1 THEN 
                (LOWER_VISCOSITY_GAS + 
                 (UPPER_VISCOSITY_GAS - LOWER_VISCOSITY_GAS) * 
                 (PRESSURE - LOWER_PRESSURE) / (UPPER_PRESSURE - LOWER_PRESSURE))
            WHEN (SELECT COUNT(*) FROM UPPER_BOUND) = 1 AND (SELECT COUNT(*) FROM LOWER_BOUND) = 0 AND (SELECT COUNT(*) FROM SECOND_BOUND) = 1 THEN 
                (UPPER_VISCOSITY_GAS + 
                 (SECOND_VISCOSITY_GAS - UPPER_VISCOSITY_GAS) * 
                 (PRESSURE - UPPER_PRESSURE) / (SECOND_PRESSURE - UPPER_PRESSURE))
            ELSE NULL
        END AS VISCOSITY_GAS,
        -- INJECTED_GAS_FORMATION_VOLUME_FACTOR
        CASE 
            WHEN (SELECT COUNT(*) FROM EXACT_MATCH) = 1 THEN EXACT_INJECTED_GAS_FORMATION_VOLUME_FACTOR
            WHEN (SELECT COUNT(*) FROM LOWER_BOUND) = 1 AND (SELECT COUNT(*) FROM UPPER_BOUND) = 1 THEN 
                (LOWER_INJECTED_GAS_FORMATION_VOLUME_FACTOR + 
                 (UPPER_INJECTED_GAS_FORMATION_VOLUME_FACTOR - LOWER_INJECTED_GAS_FORMATION_VOLUME_FACTOR) * 
                 (PRESSURE - LOWER_PRESSURE) / (UPPER_PRESSURE - LOWER_PRESSURE))
            WHEN (SELECT COUNT(*) FROM UPPER_BOUND) = 1 AND (SELECT COUNT(*) FROM LOWER_BOUND) = 0 AND (SELECT COUNT(*) FROM SECOND_BOUND) = 1 THEN 
                (UPPER_INJECTED_GAS_FORMATION_VOLUME_FACTOR + 
                 (SECOND_INJECTED_GAS_FORMATION_VOLUME_FACTOR - UPPER_INJECTED_GAS_FORMATION_VOLUME_FACTOR) * 
                 (PRESSURE - UPPER_PRESSURE) / (SECOND_PRESSURE - UPPER_PRESSURE))
            ELSE NULL
        END AS INJECTED_GAS_FORMATION_VOLUME_FACTOR,
        -- INJECTED_WATER_FORMATION_VOLUME_FACTOR
        CASE 
            WHEN (SELECT COUNT(*) FROM EXACT_MATCH) = 1 THEN EXACT_INJECTED_WATER_FORMATION_VOLUME_FACTOR
            WHEN (SELECT COUNT(*) FROM LOWER_BOUND) = 1 AND (SELECT COUNT(*) FROM UPPER_BOUND) = 1 THEN 
                (LOWER_INJECTED_WATER_FORMATION_VOLUME_FACTOR + 
                 (UPPER_INJECTED_WATER_FORMATION_VOLUME_FACTOR - LOWER_INJECTED_WATER_FORMATION_VOLUME_FACTOR) * 
                 (PRESSURE - LOWER_PRESSURE) / (UPPER_PRESSURE - LOWER_PRESSURE))
            WHEN (SELECT COUNT(*) FROM UPPER_BOUND) = 1 AND (SELECT COUNT(*) FROM LOWER_BOUND) = 0 AND (SELECT COUNT(*) FROM SECOND_BOUND) = 1 THEN 
                (UPPER_INJECTED_WATER_FORMATION_VOLUME_FACTOR + 
                 (SECOND_INJECTED_WATER_FORMATION_VOLUME_FACTOR - UPPER_INJECTED_WATER_FORMATION_VOLUME_FACTOR) * 
                 (PRESSURE - UPPER_PRESSURE) / (SECOND_PRESSURE - UPPER_PRESSURE))
            ELSE NULL
        END AS INJECTED_WATER_FORMATION_VOLUME_FACTOR
    FROM BOUND_VALUES
)
-- Step 8: Round the interpolated values and return
SELECT 
    ROUND(TARGET_PRESSURE, 5) AS PRESSURE,
    ROUND(OIL_FORMATION_VOLUME_FACTOR, 5) AS OIL_FORMATION_VOLUME_FACTOR,
    ROUND(GAS_FORMATION_VOLUME_FACTOR, 5) AS GAS_FORMATION_VOLUME_FACTOR,
    ROUND(WATER_FORMATION_VOLUME_FACTOR, 5) AS WATER_FORMATION_VOLUME_FACTOR,
    ROUND(SOLUTION_GAS_OIL_RATIO, 5) AS SOLUTION_GAS_OIL_RATIO,
    ROUND(VOLATIZED_OIL_GAS_RATIO, 5) AS VOLATIZED_OIL_GAS_RATIO,
    ROUND(VISCOSITY_OIL, 5) AS VISCOSITY_OIL,
    ROUND(VISCOSITY_WATER, 5) AS VISCOSITY_WATER,
    ROUND(VISCOSITY_GAS, 5) AS VISCOSITY_GAS,
    ROUND(INJECTED_GAS_FORMATION_VOLUME_FACTOR, 5) AS INJECTED_GAS_FORMATION_VOLUME_FACTOR,
    ROUND(INJECTED_WATER_FORMATION_VOLUME_FACTOR, 5) AS INJECTED_WATER_FORMATION_VOLUME_FACTOR
FROM INTERPOLATED_VALUES;
$$;
